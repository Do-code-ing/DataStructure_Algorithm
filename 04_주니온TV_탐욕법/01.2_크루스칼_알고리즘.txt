최소비용 신장트리: 크루스칼 알고리즘(Kruskal's Algorithm)
    - 1단계(초기화): 해답의 집합을 공집합으로 만든다.
        - V의 서로소 집합을 생성한다.
        - E를 오름차순으로 정렬한다.
    - 2단계(선택): 최적의 원소 하나를 해답의 집합에 포함시킨다. # 사이클 탐지
        - 정렬된 E 집합에서 간선 e = (i,j)를 선택
        - 두 정점 i,j가 속한 집합 p,q를 찾아서(Find),
            p,q가 같으면 e를 버리고, 다르면 F에 e를 포함한 후 p,q를 합친다(Union).
    - 3단계(검사): F = n-1이면 종료, 아니면 2단계를 반복한다.

사이클 탐지를 어떻게 하지?
    - 서로소 집합
        - 교집합이 공집합인 두 집합 A, B는 서로소 집합.
    - Union-Find 알고리즘
        - 서로소 집합 자료구조를 이용해서
        - 두 개의 원소가 같은 집합에 속하는 지를 판단할 수 있는 알고리즘

    - 전체집합 U = {A,B,C,D,E}
        for i in U:
            makeset(i): {A}, {B}, {C}, {D}, {E} # 서로소 집합으로 만들기
            p = find(B)
            q = find(C)
            
            merge(p, q): {A}, {B,C}, {D}, {E}
            p = find(C)
            q = find(E)
            equal(C, E): false

            merge(p, q): {A}, {B,C,E}, {D}
            p = find(C)
            q = find(E)
            equal(C, E): True

        init(10):
            [1,2,3,4,5,6,7,8,9,10]
            U[1] = 1, U[2] = 2, ... U[10] = 10