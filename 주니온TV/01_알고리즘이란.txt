알고리즘의 정의
    - 어떤 문제를 컴퓨터로 풀기 위한 효율적인 절차
    - 문제를 푸는 단계별 절차를 명확하게 기술
알고리즘을 공부하는 목적
    - 어떤 문제를 컴퓨터로 해결하는 방법을 공부함
    - 특정 프로그래밍 언어나 문법과는 무관함
    - 다양한 문제 해결 방법(=알고리즘 설계 기법)을 공부함
    - 알고리즘 문제를 이해하고 효율적으로 해결하는 방법을 공부함
    - 새로운 문제를 만났을 때, 그것을 해결할 수 있는 능력을 배양함

문제와 해답
    - 문제란 해답을 찾으려고 물어보는 질문
    - 파라미터는 문제에서 특정한 값이 지정되어 있지 않은 변수
    - 입력 사례(instance)란 문제의 파라미터에 지정된 특정한 값
    - 특정 입력사례의 해답은 해당 파라미터를 입력사례로 질문한 문제의 해답
알고리즘
    - 어떤 문제의 모든 입력 사례에 대해서 해답을 찾아주는 단계별 절차
    - 입력 파라미터에 어떤 입력 사례가 주어지더라도 해답을 찾을 수 있어야 함

순차 탐색 문제 (Sequential Search) (01-1)
    - 문제: 어떤 수 x가 n개의 수로 구성된 리스트 S에 존재하는가?
    - 해답: x가 존재하면 x의 인덱스가, 존재하지 않으면 0이 해답
    - 파라미터: 정수 n(>0), 리스트 S(인덱스 범위는 1부터 n까지), 원소 x
    - 입력 사례: S = [0,10,7,11,5,13,8], n = 6, x = 5
    - 입력 사례에 대한 해답: location = 4
    - 알고리즘: 모든 S에 대해서 x의 인덱스를 찾아주는 단계별 절차
        1. S의 첫째 원소에서 시작하여 x를 찾을 때까지 (x가 없는 경우 끝까지)
        2. 각 원소를 차례로 x와 비교한다.
        3. 만약, x를 찾으면 x의 인데스를 리턴하고,
        4. x를 찾지 못하면 0을 리턴한다.

리스트(array) 원소의 합 구하기 (01-2)
    - 문제: n개의 원소를 가진 리스트 S의 원소의 합을 구하시오.
    - 해답: 리스트 S의 모든 원소들의 합
    - 파라미터: 리스트 S, 정수 n
    - 입력 사례: S = [-1,10,7,11,5,13,8], n = 6
    - 출력 사례: sum = 54
    - 알고리즘: S의 모든 원소를 차례대로 sum에 더하는 절차
        1. sum을 0으로 초기화
        2. 모든 S의 원소에 대해서 sum += S[i]를 실행
        3. sum의 값을 리턴

리스트의 정렬 문제 (Sorting) (01-3)
    - 문제: n개의 수로 구성된 리스트 S를 비내림차순으로 정렬하시오.
    - 해답: S를 비내림차순으로 정렬한 리스트
    - 파라미터: S, n
    - 입력 사례: S = [-1,10,7,11,5,13,8]
    - 입력 사례에 대한 해답: S' = [-1,5,7,8,10,11,13]
    - 알고리즘: 모든 S에 대해서 S'을 찾아주는 단계별 절차
        1. 교환 정렬, 삽입 정렬, 선택 정렬, 합병 정렬, 퀵 정렬, 기타 등등.
        2. 여러 가지 정렬 알고리즘 중에서 교환 정렬 방법으로 구현.

    - 교환 정렬
        1. i 번째 자리에 있는 수와 i+1 번째부터 n 번째 자리에 있는 수를 차례대로 비교
        2. 주어진 자리의 수가 i번째 자리에 있는 수보다 작은 경우, 두 수를 교환
        3. for-i 루프를 한 번 수행하면 그 중 가장 작은 수가 첫 번째 자리에 들어감
        4. 두 번째 루프를 수행하면 둘 째 자리에 둘 째로 작은 수가 들어감
        5. 이런 과정을 통해 for-i루프가 모두 수행되면 비내림차순 정렬이 됨

행렬의 곱셈 (01-4)
    - 문제: 두 n * n 행렬의 곱을 구하시오
    - 입력 사례: n = 2
        - A = [a11, a12], B = [b11, b12]
              [a21, a22]      [b21, b22]
        - [2 3] * [5 7] = [28 38]
          [4 1]   [6 8]   [26 36]
        - C = A * B, Cij = ai1b1j + ai2+b2j
            =       n 
             cij  시그마  aikbkj
                   k=1