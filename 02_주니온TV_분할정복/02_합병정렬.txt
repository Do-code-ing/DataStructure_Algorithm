리스트(배열)의 정렬 문제
    - 문제: 정렬되지 않은 리스트 S를 오름차순으로 정렬하시오.
    - 해답: 정렬된 리스트 S'을 리턴

    - 1.3: 교환 정렬
    - 2.2: 합병 정렬

합병 정렬: 분할 정복(Divide-and-Conquer) (2.2)
    - [Divide]
        - 원소가 n개인 S를 n/2개의 원소를 가진 두 개의 리스트로 분할
    - [Conquer]
        - 왼쪽의 리스트와 오른쪽의 리스트를 각각 재귀적으로 합병 정렬
    - [Combine]
        - 각각 정렬된 두 개의 리스트를 정렬된 하나의 리스트로 합병하여 리턴

Algorithm 2.2/2.3의 문제점
    - 입력 리스트 S 이외에 리스트 U와 V를 추가적으로 사용
    - 메모리 사용의 비효율성: 더 효율적인 방법은 없을까? (2.4)

추가적으로 만들어지는 리스트 원소의 총 수
    - mergesort()를 호출할 때마다 U와 V를 새로 생성함
    - 첫 번째 재귀 호출 시 원소의 개수: U가 n/2개, V가 n/2개 대략(n개)
    - 두 번째 재귀 호출 시: U가 n/4개, V가 n/4개 대략(n/2개)
    - ...
    - 전체 재귀 호출 시 원소의 개수: n + n/2 + n/4 + ... = 2n(대략 2n개 정도)