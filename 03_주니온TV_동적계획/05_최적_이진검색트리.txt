최적 이진검색트리 문제점
    - 주어진 n개의 키로 최적 이진검색트리를 구하시오.
    - 엄밀한 문제 정의
        - 주어진 n개의 키: K1, K2, ... , Kn
        - 각 키의 검색 확률 pi: 전체 검색 횟수 중에서 Ki를 검색하는 확률
        - 각 키의 비교 횟수 ci: Ki를 검색하는 데 필요한 키의 비교 횟수
        - 각 키의 평균 검색 비용(시간): 검색 확률 * 비교 횟수(pi * ci)
        - 전체 키의 평균 검색 비용(시간): Tavg = 시그마n i = 1 pici
    - 최적 이진검색트리 문제는 최적화 문제
        - 전체 키의 평균 검색 비용을 최소화하는 이진검색트리 찾기

이진검색트리(BST:Binary Search Tree)
    - 다음의 조건들을 모두 만족하는 이진트리
        - 각 노드는 하나의 유일한 키를 가지고 있다.
        - 모든 노드가 가진 키의 값은 그 노드의 왼쪽 서브트리의 키의 값보다 크다
        - 모든 노드가 가진 키의 값은 그 노드의 오른쪽 서브트리의 키의 값보다 작다

최적 이진검색트리: 단순무식하게 풀기
    - 모든 경우의 수에 대해서 계산해 보고 최적의 이진트리 선택
    - 이진검색트리의 가능한 경우의 수는?
        - 카탈란 수: C(n) = 어쭤구저쩌궈..
        - n개의 키로 만들 수 있는 이진 트리의 수 = C(n)
        